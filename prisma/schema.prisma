generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int            @id @default(autoincrement())
  name      String?
  email     String         @unique
  userType  String?
  password  String?
  token     String?
  wishlist  WishlistItem[]
  orders    Orders[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Products {
  id          Int            @id @default(autoincrement())
  title       String?
  sku         String?
  price       Float?
  image       String?
  description String?
  categoryId  Int?
  category    Categories?    @relation(fields: [categoryId], references: [id])
  quantity    Int?
  wishlist    WishlistItem[]
  orderItems  OrderItem[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Categories {
  id          Int         @id @default(autoincrement())
  title       String
  image       String?
  icon        String?
  description String?
  products    Products[]
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Orders {
  id              Int         @id @default(autoincrement())
  orderId         String
  userId          Int
  user            Users       @relation(fields: [userId], references: [id])
  items           OrderItem[]
  amount          Float?
  discount        Float?
  shippingAddress String?
  status          String      @default("pending")
  country         String?
  city            String?
  zipcode         String?
  paymentType     String
  shippedOn       String?
  deliveredOn     String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id         Int        @id @default(autoincrement())
  orderId    Int
  productId  Int
  categoryId Int
  order      Orders     @relation(fields: [orderId], references: [id])
  product    Products   @relation(fields: [productId], references: [id])
  category   Categories @relation(fields: [categoryId], references: [id])
  quantity   Int
  price      Float
}

model WishlistItem {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  user      Users    @relation(fields: [userId], references: [id])
  product   Products @relation(fields: [productId], references: [id])
}
